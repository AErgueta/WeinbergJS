<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculador de Precio</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .info-box {
            border: 1px solid #ddd;
            padding: 10px;
            font-size: 12px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }
        .info-title {
            font-weight: bold;
            background-color: #007bff;
            color: white;
            padding: 5px;
            font-size: 14px;
            text-align: center;
            border-radius: 3px;
        }
        .detalle-largo {
            width: 100%;
            min-height: 4em; /* 4 l√≠neas de altura */
            resize: vertical; /* Permite agrandar con el mouse */
            border: 1px solid #ccc;
            padding: 5px;
        }
        .scrollable-table {
            max-height: 300px; /* Ajustable seg√∫n necesidad */
            overflow-y: auto;
            border: 1px solid #ddd;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 5px;
            text-align: center;
        }
        th {
            background-color: #007bff;
            color: white;
        }
        select, input {
            width: 100%;
            padding: 5px;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div class="container mt-3">
        <h2 class="text-center">Calculador de Precio</h2>
        
        <!-- Contenedor de Cabecera y Detalle -->
        <div class="row">
            <!-- Cabecera -->
            <div class="col-md-6">
                <div class="info-box">
                    <div class="info-title">Cabecera</div>
                    <p><strong>Fecha:</strong> {{quotation.fecha}}</p>
                    <p><strong>Fecha Vence:</strong> {{quotation.fechaVence}}</p>
                    <p><strong>Descripci√≥n:</strong> {{quotation.descripcionCorta}}</p>
                </div>
            </div>

            <!-- Detalle -->
            <div class="col-md-6">
                <div class="info-box">
                    <div class="info-title">Detalle</div>
                    <p><strong>L√≠nea:</strong> {{detalle.lineaQuo}} | <strong>Tipo:</strong> {{detalle.tipoQuo}} | <strong>Cantidad:</strong> {{detalle.cantidadQuo}}</p>
                    <p><strong>Descripci√≥n:</strong></p>
                    <textarea class="detalle-largo" readonly>{{detalle.descripcionQuo}}</textarea>
                </div>
            </div>
            <!--****************-->
            <!-- Leyenda de Tipos de Material -->
            <div class="row mt-3">
                <div class="col-12">
                    <div class="info-box bg-light border p-3">
                        <div class="info-title">Tipos de Material</div>
                        <p class="text-danger d-flex flex-wrap justify-content-between" style="line-height: 1.4;">
                            <span class="mr-4"><strong>P</strong> - Papel</span>
                            <span class="mr-4"><strong>T</strong> - Tinta</span>
                            <span class="mr-4"><strong>L</strong> - Plancha</span>
                            <span class="mr-4"><strong>C</strong> - Pel√≠cula</span>
                            <span class="mr-4"><strong>A</strong> - Acabado</span>
                            <!--<span class="mr-4"><strong>R</strong> - Preprensa</span>-->
                            <span class="mr-4"><strong>M</strong> - Mano de Obra</span>
                            <span class="mr-4"><strong>I</strong> - C. Indirectos</span>
                            <span class="mr-4"><strong>O</strong> - G. Operativos</span>
                            <span class="mr-4"><strong>S</strong> - Plastificado</span>
                            <span class="mr-4"><strong>U</strong> - Utilidad</span>
                            <span><strong>B</strong> - Borrar l√≠nea</span>
                        </p>
                    </div>
                </div>
            </div>
            <!--****************-->
        </div>
        <!-- Bot√≥n para ir al c√°lculo de pliegos -->
        <div class="text-right mt-4 mb-3"> <!-- ‚Üê margen superior agregado -->
            <a href="/quotes/calculator-paper" class="btn btn-outline-secondary" target="_blank">
                üìê C√°lculo de Pliegos
            </a>
        </div>
        <!-- GRID DE 10 L√çNEAS -->
        <div class="mt-4">
            <div class="info-title">Detalles del C√°lculo</div>
            <div class="scrollable-table">
                <table id="tabla-detalles">
                    <thead>
                        <tr>
                            <th>Tipo Material</th>
                            <th>No. Art√≠culo</th>
                            <th>Cantidad</th>
                            <th>Precio</th>
                            <th>Detalle</th>
                            <th>Monto</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#range 1 15}}
                        <tr>
                            <td>
                                <select name="tipoMaterial" class="tipo-material">
                                    <option value="" selected>Seleccione</option>
                                    <option value="P">P - Papel</option>
                                    <option value="T">T - Tinta</option>
                                    <option value="L">L - Plancha</option>
                                    <option value="C">C - Pel√≠cula</option>
                                    <option value="A">A - Acabado</option>
                                    <!--<option value="R">R - Preprensa</option>-->
                                    <option value="M">M - Mano de Obra</option>
                                    <option value="I">I - Costos Indirectos</option>
                                    <option value="O">O - Gastos Operativos</option>
                                    <option value="S">S - Plastificado</option>
                                    <option value="U">U - Utilidad</option>
                                    <option value="B">B - Borrar l√≠nea</option>
                                </select>
                            </td>
                            <td>
                                <select name="noArticulo" class="no_articulo">
                                    <option value="">Seleccione</option>
                                    <!-- Aqu√≠ se cargar√°n din√°micamente las opciones -->
                                </select>
                            </td>

                            <td><input type="number" name="cantidad" min="0" step="0.01"></td>
                            <td><input type="number" name="precio" min="0" step="0.01"></td>
                            <td><input type="text" name="detalle"></td>
                            <td><input type="number" name="monto" min="0" step="0.01" readonly></td>
                            
                            <!-- Inputs ocultos -->
                            <input type="hidden" name="factor" value="1">
                            <input type="hidden" name="cantidadM" value="0">
                            <!--<input type="hidden" name="cantidadMtot" value="0">-->
                        </tr>
                        {{/range}}
                    </tbody>

                </table>
            </div>
            <!-- Secci√≥n para mostrar la suma total -->
            <div class="mt-3 text-right">
                <button id="btnCalcularTotal" class="btn btn-success mb-2">Calcular Total</button>
                <div class="form-group d-inline-block ml-3">
                    <label for="sumaTotalCostos"><strong>Suma Total de los Costos:</strong></label>
                    <!--<input type="text" id="sumaTotalCostos" class="form-control d-inline-block" style="width: 150px; display: inline;" readonly>-->
                    <input type="text" id="sumaTotalCostos" class="form-control d-inline-block text-right" style="width: 150px;" readonly>
                </div>
            </div>
            <div class="mt-3 text-right">
                <button id="btnGuardarCostos" class="btn btn-danger">Guardar Costos</button>
            </div>

            <!-- Campo oculto para acumular cantidadMtot -->
            <input type="hidden" name="cantidadMtot" id="cantidadMtotGlobal" value="0">
            <!-- -->
            <input type="hidden" id="customerId" value="{{customerId}}">
            <input type="hidden" id="quotationId" value="{{quotationId}}">
            <input type="hidden" id="detalleId" value="{{detalleId}}">
            <input type="hidden" id="usuarioActual" value="{{user.name}}">
            <!-- -->
        </div>
    </div>
    <!-- L√≥gica del formulario -->
    <script>
        let lineaCantidad = 0;
        document.addEventListener("DOMContentLoaded", function() {
            // Delegaci√≥n de eventos para "tipoMaterial"
            document.addEventListener("change", async function(event) {
                if (event.target.classList.contains("tipo-material")) {
                    let row = event.target.closest("tr"); 
                    let noArticuloSelect = row.querySelector("select[name='noArticulo']");
                    
                    // Limpiar opciones previas
                    noArticuloSelect.innerHTML = '<option value="">Seleccione</option>';

                    let tipoMaterial = event.target.value;

                    // Si seleccion√≥ "B" - Borrar l√≠nea
                    if (tipoMaterial === "B") {
                        // Reiniciar todos los campos de esa fila
                        row.querySelector("select[name='tipoMaterial']").value = "";
                        row.querySelector("select[name='noArticulo']").innerHTML = '<option value="">Seleccione</option>';
                        row.querySelector("input[name='cantidad']").value = "";
                        row.querySelector("input[name='precio']").value = "";
                        row.querySelector("input[name='detalle']").value = "";
                        row.querySelector("input[name='monto']").value = "";
                        row.querySelector("input[name='factor']").value = 1;
                        row.querySelector("input[name='cantidadM']").value = "";

                        return; // Salir del handler, no hacer m√°s nada
                    }

                    let endpoint = "";
                    if (tipoMaterial === "P") endpoint = "/api/articulos/papel";
                    else if (tipoMaterial === "T") endpoint = "/api/articulos/tinta";
                    else if (tipoMaterial === "L") endpoint = "/api/articulos/plancha";
                    else if (tipoMaterial === "C") endpoint = "/api/articulos/pelicula";
                    else if (tipoMaterial === "A") endpoint = "/api/articulos/acabado";
                    else if (tipoMaterial === "R") endpoint = "/api/articulos/preprensa";
                    else if (tipoMaterial === "S") endpoint = "/api/articulos/plastificado";
                    else if (tipoMaterial === "M") endpoint = "/api/articulos/mano-obra";
                    else if (tipoMaterial === "I") endpoint = "/api/articulos/gastosindirectos";
                    else if (tipoMaterial === "O") endpoint = "/api/articulos/gastosoperativos";
                    else if (tipoMaterial === "U") endpoint = "/api/articulos/utilidad";

                    if (endpoint) {
                        try {
                            let response = await fetch(endpoint); 
                            let articulos = await response.json();
                            articulos.forEach(articulo => {
                                let option = document.createElement("option");
                                option.value = articulo.codigoCT;
                                option.textContent = `${articulo.codigoCT} - ${articulo.descCT}`;
                                noArticuloSelect.appendChild(option);
                            });
                        } catch (error) {
                            console.error(`Error al cargar art√≠culos de ${tipoMaterial}:`, error);
                        }
                    }
                }
            });

            // Delegaci√≥n de eventos para "noArticulo"
            document.addEventListener("change", async function(event) {
                if (event.target.classList.contains("no_articulo")) {
                    let row = event.target.closest("tr"); 
                    let codigoCT = event.target.value;
                    if (!codigoCT) return;

                    try {
                        let response = await fetch(`/api/articulo/${codigoCT}`);
                        let data = await response.json();
                        if (data) {
                            row.querySelector("input[name='precio']").value = data.montoCT || 0;
                            row.querySelector("input[name='detalle']").value = data.descCT || "";
                            row.querySelector("input[name='factor']").value = data.factorCT || 1;
                        }
                    } catch (error) {
                        console.error("Error al obtener detalles del art√≠culo:", error);
                    }
                }
            });

            // Variable para controlar el debounce
            let debounceTimer = null;

            // Evento para calcular "monto" y "cantidadM"
            document.addEventListener("input", function(event) {
                if (event.target.name === "cantidad") {
                    let row = event.target.closest("tr");
                    let tipoMaterial = row.querySelector("select[name='tipoMaterial']").value;
                    let cantidadInput = event.target;
                    let cantidad = parseFloat(cantidadInput.value) || 0;
                    let precio = parseFloat(row.querySelector("input[name='precio']").value) || 0;
                    let cantidadMtotInput = document.querySelector("#cantidadMtotGlobal");
                    let cantidadMtot = parseFloat(cantidadMtotInput.value) || 0;
                    let codigoCT = row.querySelector("select[name='noArticulo']").value;
                    let monto = 0;

                    if (tipoMaterial === "P") {
                        let factor = parseFloat(row.querySelector("input[name='factor']").value) || 1;
                        monto = cantidad * precio;

                        let cantidadM = (factor * cantidad) / 1000;
                        row.querySelector("input[name='monto']").value = monto.toFixed(2);
                        row.querySelector("input[name='cantidadM']").value = cantidadM.toFixed(3);

                        setTimeout(() => {
                            let nuevoCantidadMtot = 0;

                            document.querySelectorAll("#tabla-detalles tbody tr").forEach(tr => {
                                let tipo = tr.querySelector("select[name='tipoMaterial']")?.value;

                                if (tipo === "P") {
                                    let cantidadMValue = parseFloat(tr.querySelector("input[name='cantidadM']")?.value) || 0;
                                    nuevoCantidadMtot += cantidadMValue;
                                }
                            });

                            cantidadMtotInput.value = nuevoCantidadMtot.toFixed(2);
                        }, 150);
                    } 
                    else if (tipoMaterial === "T") {
                        if (cantidad !== 1 && cantidad !== 2) {
                            alert("Para Tinta, la cantidad solo puede ser 1 o 2.");
                            cantidadInput.value = "";
                            return;
                        }
                        monto = parseFloat(((cantidad * cantidadMtot) * precio + 4).toFixed(2));
                        row.querySelector("input[name='monto']").value = monto.toFixed(2);
                    } 
                    else if (["L", "A", "R", "S", "M"].includes(tipoMaterial)) {
                        monto = cantidad * precio;
                        row.querySelector("input[name='monto']").value = monto.toFixed(2);
                    } 
                    else if (tipoMaterial === "C") {
                        if (codigoCT === "PLX001") {
                            monto = (precio * cantidad) + 9;
                        } else if (codigoCT === "PLX002") {
                            monto = precio * (cantidad + (cantidad * 10 / 100));
                        }
                        row.querySelector("input[name='monto']").value = monto.toFixed(2);
                    }

                    // üõ† Aqu√≠ aplicamos debounce para MO2003
                    if (tipoMaterial === "M" && codigoCT === "MO2003") {
                        clearTimeout(debounceTimer);
                        debounceTimer = setTimeout(() => {
                            console.log("‚è≥ Ejecutando agregarGastosIndirectos con:", cantidad);
                            agregarGastosIndirectos(cantidad);
                        }, 1000); // Espera medio segundo tras dejar de escribir
                    }
                }
            });


            function agregarGastosIndirectos(cantidadMO) {
                const filas = document.querySelectorAll("#tabla-detalles tbody tr");
                const nuevosDatos = [
                    { codigo: "CI2001", cantidad: cantidadMO * 2 },
                    { codigo: "CI2002", cantidad: cantidadMO },
                    { codigo: "CI2003", cantidad: cantidadMO - 1 }
                ];

                let usadas = 0;
                //
                //console.log("El valor de filas es: ",filas);
                console.log("Los nuevos datos son: ",nuevosDatos);
                //
                filas.forEach((fila) => {
                    if (usadas >= nuevosDatos.length) return; // Ya insertamos los 3

                    const tipoMaterialSelect = fila.querySelector("select[name='tipoMaterial']");
                    const articuloSelect = fila.querySelector("select[name='noArticulo']");
                    const cantidadInput = fila.querySelector("input[name='cantidad']");
                    const precioInput = fila.querySelector("input[name='precio']");
                    const detalleInput = fila.querySelector("input[name='detalle']");
                    const montoInput = fila.querySelector("input[name='monto']");

                    if (!tipoMaterialSelect.value) {
                        // Rellenar esta fila
                        const dato = nuevosDatos[usadas];
                        usadas++;

                        tipoMaterialSelect.innerHTML = `<option value="I" selected>I - Gastos Indirectos</option>`;

                        fetch("/api/articulos/gastosindirectos")
                            .then(response => response.json())
                            .then(articulos => {
                                articuloSelect.innerHTML = "";
                                articulos.forEach(articulo => {
                                    const option = document.createElement("option");
                                    option.value = articulo.codigoCT;
                                    option.textContent = `${articulo.codigoCT} - ${articulo.descCT}`;
                                    articuloSelect.appendChild(option);
                                });

                                articuloSelect.value = dato.codigo;

                                const seleccionado = articulos.find(a => a.codigoCT === dato.codigo);
                                if (seleccionado) {
                                    cantidadInput.value = dato.cantidad;
                                    precioInput.value = seleccionado.montoCT || 0;
                                    detalleInput.value = seleccionado.descCT || "";
                                    fila.querySelector("input[name='factor']").value = seleccionado.factorCT || 1;
                                    montoInput.value = (dato.cantidad * (seleccionado.montoCT || 0)).toFixed(2);

                                    //usadas++;
                                }
                            })
                            .catch(error => {
                                console.error("‚ùå Error al cargar art√≠culos de gastos indirectos:", error);
                            });
                    }
                });
                // ‚úÖ Declaraci√≥n de variables afuera de los setTimeout para que sean visibles en ambos
                let s = 0;
                let ss = 0;
                let scalculo2 = 0;
                let scalculomp = 0;
                lineaCantidad = 0; // Esta ya est√° definida globalmente arriba, as√≠ que pod√©s omitirla si quer√©s

                // Esperar un poco para que las filas est√©n creadas y completadas antes de procesar
                setTimeout(() => {
                    s = 0;
                    ss = 0;

                    document.querySelectorAll("#tabla-detalles tbody tr").forEach(tr => {
                        let tipo = tr.querySelector("select[name='tipoMaterial']")?.value;
                        let monto = parseFloat(tr.querySelector("input[name='monto']")?.value) || 0;

                        if (["I", "M"].includes(tipo)) {
                            s += monto;
                        }

                        //if (["P", "T", "L", "C", "A", "S"].includes(tipo)) {
                        if (["P", "T", "L", "C", "A"].includes(tipo)) {    
                            ss += monto;
                        }
                    });

                    s = s + ss;
                    scalculo2 = s;
                    scalculomp = ss;

                    console.log("‚úÖ Resultado de los c√°lculos:");
                    console.log("s =", s.toFixed(2));
                    console.log("ss =", ss.toFixed(2));
                    console.log("scalculo2 =", scalculo2.toFixed(2));
                    console.log("scalculomp =", scalculomp.toFixed(2));
                    
                    // Buscar todos los <p> dentro de info-box y encontrar el que contenga "Cantidad:"
                    let parrafos = document.querySelectorAll(".info-box p");

                    parrafos.forEach(p => {
                        if (p.textContent.includes("Cantidad:")) {
                            let match = p.textContent.match(/Cantidad:\s*(\d+)/);
                            if (match) {
                                lineaCantidad = parseInt(match[1], 10);
                                console.log("‚úÖ l√≠neaCantidad obtenida:", lineaCantidad);
                            } else {
                                console.warn("‚ùå No se pudo extraer el n√∫mero de la l√≠nea.");
                            }
                        }
                    });

                    console.log("üì¶ l√≠neaCantidad =", lineaCantidad);
                }, 2000);

                
                setTimeout(() => {
                    // Determinar p
                    let p = (lineaCantidad >= 10001 && lineaCantidad <= 50000000) ? 10 : 15;

                    // Calcular precio y monto
                    let porcentaje = (s * p) / 100;
                    let precio = parseFloat(porcentaje.toFixed(2));
                    let monto = precio;




                    console.log("‚úÖ Paso siguiente: Gastos Operativos");
                    console.log("p =", p);
                    console.log("s = ", s);
                    console.log("precio =", precio);
                    console.log("monto =", monto);

                    // Buscar una fila vac√≠a en la tabla
                    let filas = document.querySelectorAll("#tabla-detalles tbody tr");
                    let filaDisponible = Array.from(filas).find(fila => {
                        let tipo = fila.querySelector("select[name='tipoMaterial']");
                        return tipo && !tipo.value;
                    });

                    if (!filaDisponible) {
                        console.warn("‚ùå No hay fila vac√≠a disponible para Gastos Operativos");
                        return;
                    }

                    // Rellenar datos en la fila
                    let tipoSelect = filaDisponible.querySelector("select[name='tipoMaterial']");
                    tipoSelect.value = "O"; // Gastos Operativos

                    // Disparar cambio para cargar art√≠culos
                    tipoSelect.dispatchEvent(new Event("change"));

                    // Luego de cargar los art√≠culos, seleccionar GOP001
                    setTimeout(() => {
                        let noArticuloSelect = filaDisponible.querySelector("select[name='noArticulo']");

                        fetch("/api/articulos/gastosoperativos")
                            .then(res => res.json())
                            .then(articulos => {
                                if (!articulos || articulos.length === 0) {
                                    console.warn("‚ö†Ô∏è No se encontraron art√≠culos de gastos operativos");
                                    return;
                                }

                                articulos.forEach(articulo => {
                                    let option = document.createElement("option");
                                    option.value = articulo.codigoCT;
                                    option.textContent = `${articulo.codigoCT} - ${articulo.descCT}`;
                                    noArticuloSelect.appendChild(option);
                                });

                                noArticuloSelect.value = "GOP001";
                                let articulo = articulos.find(a => a.codigoCT === "GOP001");

                                if (articulo) {
                                    filaDisponible.querySelector("input[name='detalle']").value = articulo.descCT || "";
                                    filaDisponible.querySelector("input[name='precio']").value = precio;
                                    filaDisponible.querySelector("input[name='cantidad']").value = 1;
                                    filaDisponible.querySelector("input[name='monto']").value = monto;
                                    filaDisponible.querySelector("input[name='factor']").value = articulo.factorCT || 1;
                                }
                            })
                            .catch(err => console.error("‚ùå Error al obtener art√≠culo GOP001:", err));

                    }, 500); // Peque√±o delay para asegurar que el cambio de tipoMaterial fue procesado

                }, 2000); // Esperamos que se hayan calculado los valores previos

                // Esperar un poco para que las filas est√©n creadas y completadas antes de procesar
                // --------------------------------------------------------------------------------
                setTimeout(() => {
                    let s = 0;
                    let ss = 0;

                    document.querySelectorAll("#tabla-detalles tbody tr").forEach(tr => {
                        let tipo = tr.querySelector("select[name='tipoMaterial']")?.value;
                        let monto = parseFloat(tr.querySelector("input[name='monto']")?.value) || 0;

                        if (["I", "M"].includes(tipo)) {
                            s += monto;
                        }

                        //if (["P", "T", "L", "C", "A", "S"].includes(tipo)) {
                        if (["P", "T", "L", "C", "A"].includes(tipo)) {
                            ss += monto;
                        }
                    });

                    s = s + ss;
                    let scalculo2 = s;
                    let scalculomp = ss;

                    console.log("‚úÖ Resultado de los c√°lculos:");
                    console.log("s =", s.toFixed(2));
                    console.log("ss =", ss.toFixed(2));
                    console.log("scalculo2 =", scalculo2.toFixed(2));
                    console.log("scalculomp =", scalculomp.toFixed(2));

                    // Buscar todos los <p> dentro de info-box y encontrar el que contenga "Cantidad:"
                    let parrafos = document.querySelectorAll(".info-box p");
                    let lineaCantidad = 0;

                    parrafos.forEach(p => {
                        if (p.textContent.includes("Cantidad:")) {
                            let match = p.textContent.match(/Cantidad:\s*(\d+)/);
                            if (match) {
                                lineaCantidad = parseInt(match[1], 10);
                                console.log("‚úÖ l√≠neaCantidad obtenida:", lineaCantidad);
                            } else {
                                console.warn("‚ùå No se pudo extraer el n√∫mero de la l√≠nea.");
                            }
                        }
                    });

                    console.log("üì¶ l√≠neaCantidad =", lineaCantidad);

                    setTimeout(() => {
                        let codigoCT = "";
                        let porcentaje = 0;

                        if (lineaCantidad <= 200) {
                            codigoCT = "MAU001"; porcentaje = 75;
                        } else if (lineaCantidad <= 500) {
                            codigoCT = "MAU002"; porcentaje = 70;
                        } else if (lineaCantidad <= 1000) {
                            codigoCT = "MAU003"; porcentaje = 65;
                        } else if (lineaCantidad <= 5000) {
                            codigoCT = "MAU004"; porcentaje = 60;
                        } else if (lineaCantidad <= 10000) {
                            codigoCT = "MAU005"; porcentaje = 56;
                        } else if (lineaCantidad <= 30000) {
                            codigoCT = "MAU006"; porcentaje = 49;
                        } else if (lineaCantidad <= 60000) {
                            codigoCT = "MAU007"; porcentaje = 43;
                        } else {
                            codigoCT = "MAU008"; porcentaje = 75;
                        }

                        console.log("EL c√≥digo que ser√° tomado en cuenta es: ", codigoCT);
                        console.log("El porcentaje ser√°: ", porcentaje);

                        const filas = document.querySelectorAll("#tabla-detalles tbody tr");
                        let filaDisponible = Array.from(filas).find(fila => {
                            const tipoSelect = fila.querySelector("select[name='tipoMaterial']");
                            return tipoSelect && !tipoSelect.value;
                        });

                        if (!filaDisponible) {
                            console.warn("‚ùå No se encontr√≥ una fila vac√≠a para asignar la Utilidad.");
                            return;
                        }

                        const tipoSelect = filaDisponible.querySelector("select[name='tipoMaterial']");
                        const noArticuloSelect = filaDisponible.querySelector("select[name='noArticulo']");
                        const inputCantidad = filaDisponible.querySelector("input[name='cantidad']");
                        const inputPrecio = filaDisponible.querySelector("input[name='precio']");
                        const inputMonto = filaDisponible.querySelector("input[name='monto']");
                        const inputDetalle = filaDisponible.querySelector("input[name='detalle']");
                        const inputFactor = filaDisponible.querySelector("input[name='factor']");

                        if (!tipoSelect || !noArticuloSelect || !inputCantidad || !inputPrecio || !inputMonto) {
                            console.warn("‚ö†Ô∏è No se encontraron todos los campos necesarios en la fila U.");
                            return;
                        }

                        tipoSelect.value = "U";
                        tipoSelect.dispatchEvent(new Event("change")); // esto carga los art√≠culos de utilidad

                        // Esperamos a que los art√≠culos se carguen
                        setTimeout(() => {
                            fetch("/api/articulos/utilidad")
                                .then(response => response.json())
                                .then(articulos => {
                                    noArticuloSelect.innerHTML = "";
                                    articulos.forEach(articulo => {
                                        const option = document.createElement("option");
                                        option.value = articulo.codigoCT;
                                        option.textContent = `${articulo.codigoCT} - ${articulo.descCT}`;
                                        noArticuloSelect.appendChild(option);
                                    });

                                    noArticuloSelect.value = codigoCT;
                                    const articulo = articulos.find(a => a.codigoCT === codigoCT);

                                    if (articulo) {
                                        const precio = parseFloat(((s * porcentaje) / 100).toFixed(2));

                                        inputCantidad.value = porcentaje;
                                        inputPrecio.value = precio;
                                        inputMonto.value = precio;
                                        inputDetalle.value = articulo.descCT || "";
                                        inputFactor.value = articulo.factorCT || 1;

                                        // üîí Bloquear todas las cantidades excepto la de Utilidad
                                        filas.forEach(f => {
                                            let input = f.querySelector("input[name='cantidad']");
                                            if (input) input.setAttribute("readonly", true);
                                        });

                                        inputCantidad.removeAttribute("readonly");

                                        // üîÅ Recalcular precio y monto al cambiar porcentaje
                                        inputCantidad.addEventListener("input", () => {
                                            let nuevoPorcentaje = parseFloat(inputCantidad.value) || 0;
                                            let nuevoPrecio = parseFloat(((s * nuevoPorcentaje) / 100).toFixed(2));
                                            inputPrecio.value = nuevoPrecio;
                                            inputMonto.value = nuevoPrecio;
                                        });

                                        console.log("‚úÖ L√≠nea de Utilidad cargada correctamente.");
                                    } else {
                                        console.warn("‚ö†Ô∏è No se encontr√≥ el art√≠culo con c√≥digo", codigoCT);
                                    }
                                })
                                .catch(err => {
                                    console.error("‚ùå Error al obtener art√≠culos de utilidad:", err);
                                });
                        }, 500); // delay para esperar la carga del tipo "U"
                    }, 500);


                }, 2000); // Primer timeout para esperar carga de datos


            }
            document.getElementById("btnCalcularTotal").addEventListener("click", function () {
                let totalMontos = 0;
                document.querySelectorAll("input[name='monto']").forEach(input => {
                    let valor = parseFloat(input.value) || 0;
                    totalMontos += valor;
                });
                document.getElementById("sumaTotalCostos").value = new Intl.NumberFormat('es-BO', {
                    style: 'decimal',
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                }).format(totalMontos);
            });
        });
    </script>
    <script>
        document.getElementById('btnGuardarCostos').addEventListener('click', () => {
            const customerId = document.getElementById('customerId').value;
            const quotationId = document.getElementById('quotationId').value;
            const detalleId = document.getElementById('detalleId').value;

            const titulo = prompt("Ingrese un nombre para este c√°lculo de costos (ej: 'Versi√≥n A'):");
            if (!titulo || titulo.trim() === '') {
                alert("Debe ingresar un t√≠tulo v√°lido para identificar este c√°lculo.");
                return;
            }

            const usuario = document.getElementById('usuarioActual').value || 'sistema';

            const rows = document.querySelectorAll('#tabla-detalles tbody tr');
            const detalles = [];

            rows.forEach((row, index) => {
                const tipoMaterial = row.querySelector('[name="tipoMaterial"]').value;
                const noArticulo = row.querySelector('[name="noArticulo"]').value;
                const cantidad = parseFloat(row.querySelector('[name="cantidad"]').value) || 0;
                const precio = parseFloat(row.querySelector('[name="precio"]').value) || 0;
                const detalle = row.querySelector('[name="detalle"]').value;
                const monto = parseFloat(row.querySelector('[name="monto"]').value) || 0;
                const factor = parseFloat(row.querySelector('[name="factor"]').value) || 0;
                const cantidadM = parseFloat(row.querySelector('[name="cantidadM"]').value) || 0;

                if (tipoMaterial && noArticulo) {
                    detalles.push({
                        lineaQuo: index + 1,
                        tipoMaterial,
                        noArticulo,
                        cantidad,
                        precio,
                        monto,
                        detalle,
                        factor,
                        cantidadM
                    });
                }
            });

            if (detalles.length === 0) {
                alert("No hay l√≠neas con datos v√°lidos para guardar.");
                return;
            }

            fetch('/api/quotation-costs/guardar-costos', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ customerId, quotationId, detalleId, titulo, usuario, detalles })
            })
            .then(res => res.json())
            .then(data => {
                alert(data.message || 'Datos guardados correctamente.');
            })
            .catch(error => {
                console.error("Error al guardar:", error);
                alert("Ocurri√≥ un error al guardar los costos.");
            });
        });
    </script>
</body>
</html>
